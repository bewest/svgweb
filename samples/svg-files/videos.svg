<?xml version="1.0" standalone="no"?>

<svg xmlns="http://www.w3.org/2000/svg" 
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:svg="http://www.w3.org/2000/svg"
 id="canvas"
 onload="loaded()">

  <script type="text/javascript"><![CDATA[
      var SVG = "http://www.w3.org/2000/svg";
      var XLINK = "http://www.w3.org/1999/xlink";
      var hotspot = "rgba(0,200,200,0.3)";

      var currentTransform = null;

      function loaded() {
          // change onloadFunc to point to your real onload function that you
          // want called when the page is truly ready
          var onloadFunc = doload;
        
          if (top.svgweb != undefined) {
            top.svgweb.addOnLoad(onloadFunc, true, window);
          } else {
            onloadFunc();
          }
      }   

      function doload() {
          var videos;

          // load a few videos
          videos = [ 
            /* Star Trek Trailer */ "http://www.youtube.com/get_video?video_id=G_zKM1cKd_Y&l=133&fmt_map=18%2F512000%2F9%2F0%2F115%2C34%2F0%2F9%2F0%2F115%2C5%2F0%2F7%2F0%2F0&q=flv%2520movie%2520trailers%2520star%2520trek&rec_title=Re%253A%2520Star%2520Trek%2520Movie%2520Trailer%2520-%2520Domestic%2520Trailer%25202.flv&ad_logging_flag=1&t=vjVQa1PpcFNKldmNScLwyLwjnAi8U07n4tosm7lbogI%3D&plid=AARtyFahvoXm4c5N&vq=None&ad_module=http%3A%2F%2Fs.ytimg.com%2Fyt%2Fswf%2Fad-vfl106957.swf&mpvid=AARtyFah7Fr2DHfo&rec_categories=24&video_recorder_module=http%3A%2F%2Fs.ytimg.com%2Fyt%2Fswf%2Fvideo_recorder_module-vfl99752.swf&ad_channel_code=invideo_overlay_480x70_cat24%2Cafv_overlay%2Cafv_ugc%2CVidVert358%2CVidVert676%2Cyt_mpvid_AARtyFah7Fr2DHfo&ad_video_pub_id=ca-pub-6219811747049371&tk=7nBo910HfcTxxy1dwNJRQ3q00a1ep4QKHItzxrYfkC-kwpu5ndgVEQ%3D%3D&title=",
            /* Harry Potter Trailer */ "http://www.youtube.com/get_video?video_id=L0Jv5DFQW4M&l=177&fmt_map=22%2F2000000%2F9%2F0%2F115%2C34%2F0%2F9%2F0%2F115%2C5%2F0%2F7%2F0%2F0&q=movie%2520trailers&rec_title=Re%253A%2520Harry%2520Potter%2520Half%2520Blood%2520Prince%2520Full%2520Movie%2520Trailer%25202009%2520HD&ad_logging_flag=1&t=vjVQa1PpcFPMxwsoJrqNPn9ZqfEPC3T26zXXOV_a_Ac%3D&plid=AARtyMfT01b0b2R3&vq=1&ad_module=http%3A%2F%2Fs.ytimg.com%2Fyt%2Fswf%2Fad-vfl106957.swf&mpvid=AARtyMfUAiXgHLx7&rec_categories=24&video_recorder_module=http%3A%2F%2Fs.ytimg.com%2Fyt%2Fswf%2Fvideo_recorder_module-vfl99752.swf&ad_channel_code=invideo_overlay_480x70_cat24%2Cafv_overlay%2Cafv_ugc%2CVidVert22%2CVidVert3%2Cyt_mpvid_AARtyMfUAiXgHLx7&ad_video_pub_id=ca-pub-6219811747049371&tk=7nBo910HfcTxxy1dwNJRQzPzBjHWgkl6cNPKi9ikP1fCgPDUXbwBpA%3D%3D&title=",
            /* Bruno Trailer */ "http://www.youtube.com/get_video?video_id=fAGpmNb2xfQ&l=152&fmt_map=35%2F640000%2F9%2F0%2F115%2C18%2F512000%2F9%2F0%2F115%2C34%2F0%2F9%2F0%2F115%2C5%2F0%2F7%2F0%2F0&q=movie%2520trailers&rec_title=Re%253A%2520Bruno%2520-%2520Official%2520Trailer&ad_logging_flag=1&t=vjVQa1PpcFOZQS9-hUxG0qw1L0ieT8c2YIdT9baoo_g%3D&plid=AARtyNYYvwGp0feq&vq=2&iv_module=http%3A%2F%2Fs.ytimg.com%2Fyt%2Fswf%2Fiv_module-vfl97441.swf&mpvid=AARtyNYY-Zk6HT3C&rec_categories=24&video_recorder_module=http%3A%2F%2Fs.ytimg.com%2Fyt%2Fswf%2Fvideo_recorder_module-vfl99752.swf&ad_channel_code=invideo_overlay_480x70_cat24%2Cafv_overlay%2CVidVert34%2CVidVert184%2Cyt_mpvid_AARtyNYY-Zk6HT3C&ad_video_pub_id=ca-pub-6219811747049371&tk=7nBo910HfcTxxy1dwNJRQ262ZV0Az_350xt-MFLDk2iW5Vqkm5D62Q%3D%3D&title=",
            "http://svgweb.googlecode.com/svn/trunk/samples/svg-files/20051210-w50s.flv"
           ];

          for (var k = 0; k < videos.length; k++) {
            var g = addVideo(videos[k], 1.0);
            g.style.opacity = 1.0;
            g.vTranslate = [100 + Math.random() * 300 + (k%3) * 250,
                            100 + Math.random() * 300 + (k/3) * 280];
            var c = 0.25 + (Math.random() * .25);
            g.vScale = c; // 0.25; // 0.001;
            g.vRotate = (Math.random() * 40) - 20;
  
            setupTransform(g.id);
            rampOpacityUp(g);
          }

          document.getElementById("canvas").addEventListener("mousemove", onMouseMove, false);
          document.getElementById("canvas").addEventListener("mouseup", onMouseUp, false);
          document.getElementById("background-rect").addEventListener("mousemove", onMouseMove, false);
          document.getElementById("background-rect").addEventListener("mouseup", onMouseUp, false);
      }

      // convenience function to set X, Y, width, and height attributes
      function svgSetXYWH(el, x, y, w, h) {
          el.setAttribute("x", x);
          el.setAttribute("y", y);
          el.setAttribute("width", w);
          el.setAttribute("height", h);
      }

      // create a new clickable rect [x,y,w,h] with the givenfill/stroke
      // with the given handler on mouse down
      function newClickableRect(id, x, y, w, h, fill, stroke, handler) {
          var p = document.createElementNS(SVG, "rect");
          p.setAttribute("id", id);
          svgSetXYWH(p, x, y, w, h);
          p.setAttribute("rx", 30);
          p.setAttribute("ry", 30);
          p.setAttribute("fill", fill);
          //p.setAttribute("stroke", stroke);
          //p.setAttribute("stroke-width", 10);
          p.addEventListener("mousedown", handler, false);
          return p;
      }

      // create all the elements for the given video URL.
      // this includes the toplevel group, the video itself,
      // and the clickable hotspots used for rotating the video.
      var nextVideoId = 0;
      function addVideo(url, initOpacity) {
          var vidw = 1000;
          var vidh = 700;

          var id = nextVideoId++;
          var s = "video" + id;
          var g = document.createElementNS(SVG, "g");
          g.setAttribute("id", s);
          g.addEventListener("mouseover", onEnterVideo, false);
          g.addEventListener("mouseout", onExitVideo, false);
          g.addEventListener("mousedown", function(evt) { startTransform(evt, "c", "move"); evt.preventDefault(); }, false);

          if (initOpacity != null)
              g.style.opacity = initOpacity;

          var video = document.createElementNS(SVG, "video");
          video.setAttribute("id", s+"-vid");
          svgSetXYWH(video, -vidw/2, -vidh/2, vidw, vidh);
          video.setAttribute("type", "video/flv");
          video.setAttribute("repeatCount", "indefinite");
          video.setAttributeNS(XLINK, "href", url);
          g.appendChild(video);

          var rect = document.createElementNS(SVG, "rect");
          rect.setAttribute("id", s+"-border");
          svgSetXYWH(rect, -vidw/2, -vidh/2, vidw, vidh);
          rect.setAttribute("stroke", "black");
          rect.setAttribute("rx", "10");
          rect.setAttribute("ry", "10");
          rect.setAttribute("stroke-width", "20");
          rect.setAttribute("fill", "none");

          //g.appendChild(rect);

          var g2 = document.createElementNS(SVG, "g");
          g2.setAttribute("id", s+"-overlay");
          g2.setAttribute("class", "video-overlay");
          g2.setAttribute("style", "visibility: hidden");

          var rsz = 200;

          g2.appendChild(newClickableRect(s+"-tl", -vidw/2, -vidh/2, rsz, rsz,
                                          hotspot, "rgba(100,100,100,0.5)",
                                          function (evt) { return startTransform(evt, 'tl', 'rotate'); }));
          g2.appendChild(newClickableRect(s+"-tr", vidw/2-rsz, -vidh/2, rsz, rsz,
                                          hotspot, "rgba(100,100,100,0.5)",
                                          function (evt) { return startTransform(evt, 'tr', 'rotate'); }));
          g2.appendChild(newClickableRect(s+"-br", vidw/2-rsz, vidh/2-rsz, rsz, rsz,
                                          hotspot, "rgba(100,100,100,0.5)",
                                          function (evt) { return startTransform(evt, 'br', 'rotate'); }));
          g2.appendChild(newClickableRect(s+"-bl", -vidw/2, vidh/2-rsz, rsz, rsz,
                                          hotspot, "rgba(100,100,100,0.5)",
                                          function (evt) { return startTransform(evt, 'bl', 'rotate'); }));
          /*
          g2.appendChild(newClickableRect(s+"-c", -rsz/2, -rsz/2, rsz, rsz,
                                          hotspot, "rgba(100,100,100,0.5)",
                                          function (evt) { return startTransform(evt, 'c', 'scale'); }));
          */

          g.appendChild(g2);
          document.getElementById("canvas").appendChild(g);
          return g;
      }

      function bringToFront(s) {
          var el = document.getElementById(s);

          // commented out because it causes the video to restart
          //el.parentNode.removeChild(el);
          //document.getElementById("canvas").appendChild(el);
      }

      // take the transforms saved on the element and turn them into
      // svg transform syntax
      function setupTransform(s) {
          var g = document.getElementById(s);
          var g2 = document.getElementById(s + "-overlay");

          g.setAttribute("transform", "translate(" + g.vTranslate[0] + "," + g.vTranslate[1] + ") " +
                         "scale(" + g.vScale + "," + g.vScale + ") " +
                         "rotate(" + g.vRotate + ") ");
      }

      function baseName(ev) {
          var id = ev.target.getAttribute("id");
          return id.substr(0, id.indexOf("-"));
      }

      function onEnterVideo(ev) {
          var e = baseName(ev);
          if (!e)
              return;
  
          document.getElementById(e + '-overlay').style.visibility = "visible";
          ev.preventDefault();
      }

      function onExitVideo(ev) {
          var e = baseName(ev);
          if (!e)
              return;
          document.getElementById(e + '-overlay').style.visibility = "hidden";
          ev.preventDefault();
      }

      function startTransform(ev, corner, what) {
          // ignore if something else is already going on
          if (currentTransform != null)
              return;

          var e = baseName(ev);
          if (!e)
              return;

          bringToFront(e);
          var g = document.getElementById(e);

          currentTransform = { what: what, el: e, corner: corner, g: g,
                               s: g.vScale, r: g.vRotate, t: g.vTranslate,
                               x: ev.clientX, y: ev.clientY };
          rampOpacityDown(currentTransform.g);
      }

      function onMouseUp(ev) {
          if (currentTransform)
              rampOpacityUp(currentTransform.g);
          currentTransform = null;
          ev.preventDefault();
      }

      function onMouseMove(ev) {
          if (!("currentTransform" in window) ||
              currentTransform == null)
              return;

          var ex = ev.clientX;
          var ey = ev.clientY;
          var pos = currentTransform.g.vTranslate;

          if (currentTransform.what == "rotate") {
              var r2d = 360.0 / (2.0 * Math.PI);

              var lastAngle = Math.atan2(currentTransform.y - pos[1],
                                         currentTransform.x - pos[0]) * r2d;
              var curAngle = Math.atan2(ey - pos[1],
                                        ex - pos[0]) * r2d;

              currentTransform.g.vRotate += (curAngle - lastAngle);

              var lastLen = Math.sqrt(Math.pow(currentTransform.y - pos[1], 2) +
                                      Math.pow(currentTransform.x - pos[0], 2));
              var curLen = Math.sqrt(Math.pow(ey - pos[1], 2) +
                                     Math.pow(ex - pos[0], 2));

              currentTransform.g.vScale = currentTransform.g.vScale * (curLen / lastLen);

          } else if (currentTransform.what == "move") {
              var xd = ev.clientX - currentTransform.x;
              var yd = ev.clientY - currentTransform.y;

              currentTransform.g.vTranslate = [ pos[0] + xd, pos[1] + yd ];
          }

          currentTransform.x = ex;
          currentTransform.y = ey;

          setupTransform(currentTransform.el);

          ev.preventDefault();
      }

      function rampOpacityDown(g) {
          g.style.opacity = 1.0;
          var rampFunc = function () {
              var o = parseFloat(g.style.opacity) - 0.05;
              g.style.opacity = o;
              if (o > 0.7)
                  setTimeout(rampFunc, 10);
          }
          rampFunc();
      }

      function rampOpacityUp(g) {
          g.style.opacity = 0.7;
          var rampFunc = function () {
              var o = parseFloat(g.style.opacity) + 0.05;
              g.style.opacity = o;
              if (o < 1.0)
                  setTimeout(rampFunc, 10);
          }
          rampFunc();
      }
  ]]></script>

  <rect id="background-rect" x="0%" y="0%" width="100%" height="100%" fill="#aaaaaa"/>

</svg>
